/*
 * generated by Xtext
 */
package com.rainerschuster.webidl.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import com.google.inject.Inject;
import com.rainerschuster.webidl.services.WebIDLGrammarAccess
import org.eclipse.xtext.Keyword
import org.eclipse.xtext.util.Pair

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class WebIDLFormatter extends AbstractDeclarativeFormatter {

	@Inject extension WebIDLGrammarAccess

	override protected void configureFormatting(FormattingConfig c) {
		// Default linewrap is 80
		c.setAutoLinewrap(120);

		// Find common keywords an specify formatting for them
		for (Pair<Keyword, Keyword> pair : findKeywordPairs("(", ")")) {
			c.setNoSpace().after(pair.first);
			c.setNoSpace().before(pair.second);
		}
		for (Pair<Keyword, Keyword> pair : findKeywordPairs("<", ">")) {
			c.setNoSpace().after(pair.first);
			c.setNoSpace().before(pair.second);
		}
		for (Keyword comma : findKeywords(",")) {
			c.setNoSpace().before(comma);
//			c.setSpace().after(comma);
		}
		for (Keyword semicolon : findKeywords(";")) {
			c.setNoSpace().before(semicolon);
		}

		// (Extended) Definition
//		c.setLinewrap().after(extendedDefinitionAccess.ealExtendedAttributeListParserRuleCall_0_0);
//		c.setLinewrap().before(definitionRule);

		// Callback function
		c.setLinewrap().after(callbackRestAccess.semicolonKeyword_6);

		// Interface
		c.setLinewrap().before(interfaceAccess.interfaceKeyword_0);
		c.setIndentation(interfaceAccess.leftCurlyBracketKeyword_3, interfaceAccess.rightCurlyBracketKeyword_5);
		c.setLinewrap().after(interfaceAccess.leftCurlyBracketKeyword_3);
		c.setNoSpace.between(interfaceAccess.rightCurlyBracketKeyword_5, interfaceAccess.semicolonKeyword_6);
		c.setLinewrap().after(interfaceAccess.semicolonKeyword_6);

		// Dictionary
		c.setLinewrap().before(dictionaryAccess.dictionaryKeyword_0);
		c.setIndentation(dictionaryAccess.leftCurlyBracketKeyword_3, dictionaryAccess.rightCurlyBracketKeyword_5);
		c.setLinewrap().after(dictionaryAccess.leftCurlyBracketKeyword_3);
		c.setNoSpace.between(dictionaryAccess.rightCurlyBracketKeyword_5, dictionaryAccess.semicolonKeyword_6);
		c.setLinewrap().after(dictionaryAccess.semicolonKeyword_6);

		c.setLinewrap().after(dictionaryMemberRule);

		// Partial
		c.setLinewrap().before(partialAccess.partialKeyword_0);

		// Partial Interface
		c.setIndentation(partialInterfaceAccess.leftCurlyBracketKeyword_2, partialInterfaceAccess.rightCurlyBracketKeyword_4);
		c.setLinewrap().after(partialInterfaceAccess.leftCurlyBracketKeyword_2);
		c.setNoSpace.between(partialInterfaceAccess.rightCurlyBracketKeyword_4, partialInterfaceAccess.semicolonKeyword_5);
		c.setLinewrap().after(partialInterfaceAccess.semicolonKeyword_5);

		// Partial Dictionary
		c.setIndentation(partialDictionaryAccess.leftCurlyBracketKeyword_2, partialDictionaryAccess.rightCurlyBracketKeyword_4);
		c.setLinewrap().after(partialDictionaryAccess.leftCurlyBracketKeyword_2);
		c.setNoSpace.between(partialDictionaryAccess.rightCurlyBracketKeyword_4, partialDictionaryAccess.semicolonKeyword_5);
		c.setLinewrap().after(partialDictionaryAccess.semicolonKeyword_5);

		// Enum
		c.setIndentation(enumAccess.leftCurlyBracketKeyword_2, enumAccess.rightCurlyBracketKeyword_6);
		c.setLinewrap().after(enumAccess.leftCurlyBracketKeyword_2);
		c.setNoSpace.between(enumAccess.rightCurlyBracketKeyword_6, enumAccess.semicolonKeyword_7);
		c.setLinewrap().before(enumAccess.rightCurlyBracketKeyword_6);
		c.setLinewrap().after(enumAccess.semicolonKeyword_7);

		// Typedef
		c.setLinewrap(2).after(typedefAccess.semicolonKeyword_3);
		c.setNoSpace().before(typedefAccess.semicolonKeyword_3);

		// ImplementsStatement
		c.setLinewrap(2).after(implementsStatementAccess.semicolonKeyword_3);
		c.setNoSpace().before(implementsStatementAccess.semicolonKeyword_3);

		// Interface member
		c.setLinewrap().after(interfaceMemberRule);

		// Operation
		c.setNoSpace().before(operationAccess.leftParenthesisKeyword_3);

		// Argument
		c.setNoSpace().before(argumentAccess.ellipsisFullStopFullStopFullStopKeyword_1_1_1_0);

		// Type
//		c.setNoSpace().before(arrayTypeSuffixAccess.leftSquareBracketKeyword_1);
		c.setNoSpace().before(nullableTypeSuffixAccess.questionMarkKeyword_1);

		// Comments 
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule);
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule);
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule);
	}
}
